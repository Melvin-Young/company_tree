// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TeamCard should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    company={
        Company {
            "companyName": "Dummy",
            "root": Team {
              "children": Map {
                "Dummy Team" => Team {
                  "children": Map {},
                  "name": "Dummy Team",
                  "nestedStaff": Map {},
                  "parent": Object {},
                  "staff": Map {},
                },
              },
              "name": "Dummy",
              "nestedStaff": Map {},
              "parent": Object {},
              "staff": Map {},
            },
          }
    }
    setHeader={[Function]}
    team={
        Team {
            "children": Map {},
            "name": "Dummy Team",
            "nestedStaff": Map {},
            "parent": Object {},
            "staff": Map {},
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          onClick={[Function]}
>
          <img
                    alt="Team"
                    className="card-picture"
                    src="smalltable.jpg"
          />
          <h2>
                     
                    Dummy Team
                     Team 
          </h2>
          <ul>
                     
                     
          </ul>
</div>,
        <div
          className="team-button-container"
>
          <ConfigurableButton
                    buttonText="My Team"
                    onClickFunc={[Function]}
          />
</div>,
      ],
      "className": "card team-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="Team"
              className="card-picture"
              src="smalltable.jpg"
/>,
            <h2>
               
              Dummy Team
               Team 
</h2>,
            <ul>
               
               
</ul>,
          ],
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Team",
              "className": "card-picture",
              "src": "smalltable.jpg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                "Dummy Team",
                " Team ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              "Dummy Team",
              " Team ",
            ],
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                " ",
                Array [],
                " ",
              ],
            },
            "ref": null,
            "rendered": Array [
              " ",
              " ",
            ],
            "type": "ul",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ConfigurableButton
            buttonText="My Team"
            onClickFunc={[Function]}
/>,
          "className": "team-button-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "buttonText": "My Team",
            "onClickFunc": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            onClick={[Function]}
>
            <img
                        alt="Team"
                        className="card-picture"
                        src="smalltable.jpg"
            />
            <h2>
                         
                        Dummy Team
                         Team 
            </h2>
            <ul>
                         
                         
            </ul>
</div>,
          <div
            className="team-button-container"
>
            <ConfigurableButton
                        buttonText="My Team"
                        onClickFunc={[Function]}
            />
</div>,
        ],
        "className": "card team-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <img
                alt="Team"
                className="card-picture"
                src="smalltable.jpg"
/>,
              <h2>
                 
                Dummy Team
                 Team 
</h2>,
              <ul>
                 
                 
</ul>,
            ],
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "Team",
                "className": "card-picture",
                "src": "smalltable.jpg",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  "Dummy Team",
                  " Team ",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                "Dummy Team",
                " Team ",
              ],
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  " ",
                  Array [],
                  " ",
                ],
              },
              "ref": null,
              "rendered": Array [
                " ",
                " ",
              ],
              "type": "ul",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ConfigurableButton
              buttonText="My Team"
              onClickFunc={[Function]}
/>,
            "className": "team-button-container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "buttonText": "My Team",
              "onClickFunc": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
